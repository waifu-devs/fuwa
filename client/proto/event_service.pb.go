// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: event_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event subscription configuration
type SubscribeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event types to subscribe to (empty = all)
	EventTypes []string `protobuf:"bytes,1,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	// Scopes to filter by (empty = all accessible)
	Scopes []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// Start from this sequence number (0 = current, -1 = beginning)
	FromSequence int64 `protobuf:"varint,3,opt,name=from_sequence,json=fromSequence,proto3" json:"from_sequence,omitempty"`
	// Additional filtering metadata
	Filters       map[string]string `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_event_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_event_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *SubscribeRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *SubscribeRequest) GetFromSequence() int64 {
	if x != nil {
		return x.FromSequence
	}
	return 0
}

func (x *SubscribeRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_event_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_event_service_proto_rawDescGZIP(), []int{1}
}

func (x *PublishRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Sequence      int64                  `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_event_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_event_service_proto_rawDescGZIP(), []int{2}
}

func (x *PublishResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *PublishResponse) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PublishResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PublishResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	EventTypes    []string               `protobuf:"bytes,2,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	FromSequence  int64                  `protobuf:"varint,3,opt,name=from_sequence,json=fromSequence,proto3" json:"from_sequence,omitempty"`
	ToSequence    int64                  `protobuf:"varint,4,opt,name=to_sequence,json=toSequence,proto3" json:"to_sequence,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	mi := &file_event_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_event_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetEventsRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *GetEventsRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *GetEventsRequest) GetFromSequence() int64 {
	if x != nil {
		return x.FromSequence
	}
	return 0
}

func (x *GetEventsRequest) GetToSequence() int64 {
	if x != nil {
		return x.ToSequence
	}
	return 0
}

func (x *GetEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	NextSequence  int64                  `protobuf:"varint,3,opt,name=next_sequence,json=nextSequence,proto3" json:"next_sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsResponse) Reset() {
	*x = GetEventsResponse{}
	mi := &file_event_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResponse) ProtoMessage() {}

func (x *GetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return file_event_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetEventsResponse) GetNextSequence() int64 {
	if x != nil {
		return x.NextSequence
	}
	return 0
}

var File_event_service_proto protoreflect.FileDescriptor

const file_event_service_proto_rawDesc = "" +
	"\n" +
	"\x13event_service.proto\x12\x04fuwa\x1a\vtypes.proto\"\xeb\x01\n" +
	"\x10SubscribeRequest\x12\x1f\n" +
	"\vevent_types\x18\x01 \x03(\tR\n" +
	"eventTypes\x12\x16\n" +
	"\x06scopes\x18\x02 \x03(\tR\x06scopes\x12#\n" +
	"\rfrom_sequence\x18\x03 \x01(\x03R\ffromSequence\x12=\n" +
	"\afilters\x18\x04 \x03(\v2#.fuwa.SubscribeRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"3\n" +
	"\x0ePublishRequest\x12!\n" +
	"\x05event\x18\x01 \x01(\v2\v.fuwa.EventR\x05event\"x\n" +
	"\x0fPublishResponse\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x03R\bsequence\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xa5\x01\n" +
	"\x10GetEventsRequest\x12\x14\n" +
	"\x05scope\x18\x01 \x01(\tR\x05scope\x12\x1f\n" +
	"\vevent_types\x18\x02 \x03(\tR\n" +
	"eventTypes\x12#\n" +
	"\rfrom_sequence\x18\x03 \x01(\x03R\ffromSequence\x12\x1f\n" +
	"\vto_sequence\x18\x04 \x01(\x03R\n" +
	"toSequence\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"x\n" +
	"\x11GetEventsResponse\x12#\n" +
	"\x06events\x18\x01 \x03(\v2\v.fuwa.EventR\x06events\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\x12#\n" +
	"\rnext_sequence\x18\x03 \x01(\x03R\fnextSequence2\xb8\x01\n" +
	"\fEventService\x122\n" +
	"\tSubscribe\x12\x16.fuwa.SubscribeRequest\x1a\v.fuwa.Event0\x01\x126\n" +
	"\aPublish\x12\x14.fuwa.PublishRequest\x1a\x15.fuwa.PublishResponse\x12<\n" +
	"\tGetEvents\x12\x16.fuwa.GetEventsRequest\x1a\x17.fuwa.GetEventsResponseB\"Z github.com/waifu-devs/fuwa/protob\x06proto3"

var (
	file_event_service_proto_rawDescOnce sync.Once
	file_event_service_proto_rawDescData []byte
)

func file_event_service_proto_rawDescGZIP() []byte {
	file_event_service_proto_rawDescOnce.Do(func() {
		file_event_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_service_proto_rawDesc), len(file_event_service_proto_rawDesc)))
	})
	return file_event_service_proto_rawDescData
}

var file_event_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_event_service_proto_goTypes = []any{
	(*SubscribeRequest)(nil),  // 0: fuwa.SubscribeRequest
	(*PublishRequest)(nil),    // 1: fuwa.PublishRequest
	(*PublishResponse)(nil),   // 2: fuwa.PublishResponse
	(*GetEventsRequest)(nil),  // 3: fuwa.GetEventsRequest
	(*GetEventsResponse)(nil), // 4: fuwa.GetEventsResponse
	nil,                       // 5: fuwa.SubscribeRequest.FiltersEntry
	(*Event)(nil),             // 6: fuwa.Event
}
var file_event_service_proto_depIdxs = []int32{
	5, // 0: fuwa.SubscribeRequest.filters:type_name -> fuwa.SubscribeRequest.FiltersEntry
	6, // 1: fuwa.PublishRequest.event:type_name -> fuwa.Event
	6, // 2: fuwa.GetEventsResponse.events:type_name -> fuwa.Event
	0, // 3: fuwa.EventService.Subscribe:input_type -> fuwa.SubscribeRequest
	1, // 4: fuwa.EventService.Publish:input_type -> fuwa.PublishRequest
	3, // 5: fuwa.EventService.GetEvents:input_type -> fuwa.GetEventsRequest
	6, // 6: fuwa.EventService.Subscribe:output_type -> fuwa.Event
	2, // 7: fuwa.EventService.Publish:output_type -> fuwa.PublishResponse
	4, // 8: fuwa.EventService.GetEvents:output_type -> fuwa.GetEventsResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_event_service_proto_init() }
func file_event_service_proto_init() {
	if File_event_service_proto != nil {
		return
	}
	file_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_service_proto_rawDesc), len(file_event_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_service_proto_goTypes,
		DependencyIndexes: file_event_service_proto_depIdxs,
		MessageInfos:      file_event_service_proto_msgTypes,
	}.Build()
	File_event_service_proto = out.File
	file_event_service_proto_goTypes = nil
	file_event_service_proto_depIdxs = nil
}
