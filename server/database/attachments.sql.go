// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: attachments.sql

package database

import (
	"context"
)

const createAttachment = `-- name: CreateAttachment :one
INSERT INTO attachments (attachment_id, message_id, filename, content_type, size, url)
VALUES (?, ?, ?, ?, ?, ?)
RETURNING attachment_id, message_id, channel_id, author_id, filename, content_type, size, url
`

type CreateAttachmentParams struct {
	AttachmentID string `json:"attachment_id"`
	MessageID    string `json:"message_id"`
	Filename     string `json:"filename"`
	ContentType  string `json:"content_type"`
	Size         int64  `json:"size"`
	Url          string `json:"url"`
}

func (q *Queries) CreateAttachment(ctx context.Context, arg CreateAttachmentParams) (Attachment, error) {
	row := q.db.QueryRowContext(ctx, createAttachment,
		arg.AttachmentID,
		arg.MessageID,
		arg.Filename,
		arg.ContentType,
		arg.Size,
		arg.Url,
	)
	var i Attachment
	err := row.Scan(
		&i.AttachmentID,
		&i.MessageID,
		&i.ChannelID,
		&i.AuthorID,
		&i.Filename,
		&i.ContentType,
		&i.Size,
		&i.Url,
	)
	return i, err
}

const deleteAttachment = `-- name: DeleteAttachment :exec
DELETE FROM attachments
WHERE attachment_id = ?
`

func (q *Queries) DeleteAttachment(ctx context.Context, attachmentID string) error {
	_, err := q.db.ExecContext(ctx, deleteAttachment, attachmentID)
	return err
}

const getAttachment = `-- name: GetAttachment :one
SELECT attachment_id, message_id, channel_id, author_id, filename, content_type, size, url FROM attachments
WHERE attachment_id = ?
`

func (q *Queries) GetAttachment(ctx context.Context, attachmentID string) (Attachment, error) {
	row := q.db.QueryRowContext(ctx, getAttachment, attachmentID)
	var i Attachment
	err := row.Scan(
		&i.AttachmentID,
		&i.MessageID,
		&i.ChannelID,
		&i.AuthorID,
		&i.Filename,
		&i.ContentType,
		&i.Size,
		&i.Url,
	)
	return i, err
}

const getAttachmentsByMessageId = `-- name: GetAttachmentsByMessageId :many
SELECT attachment_id, message_id, channel_id, author_id, filename, content_type, size, url FROM attachments
WHERE message_id = ?
`

func (q *Queries) GetAttachmentsByMessageId(ctx context.Context, messageID string) ([]Attachment, error) {
	rows, err := q.db.QueryContext(ctx, getAttachmentsByMessageId, messageID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Attachment
	for rows.Next() {
		var i Attachment
		if err := rows.Scan(
			&i.AttachmentID,
			&i.MessageID,
			&i.ChannelID,
			&i.AuthorID,
			&i.Filename,
			&i.ContentType,
			&i.Size,
			&i.Url,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
