// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: channel_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Channel service request/response types
type CreateChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          ChannelType            `protobuf:"varint,2,opt,name=type,proto3,enum=fuwa.ChannelType" json:"type,omitempty"`
	ServerId      string                 `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ParentId      string                 `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChannelRequest) Reset() {
	*x = CreateChannelRequest{}
	mi := &file_channel_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelRequest) ProtoMessage() {}

func (x *CreateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChannelRequest) GetType() ChannelType {
	if x != nil {
		return x.Type
	}
	return ChannelType_CHANNEL_TYPE_UNSPECIFIED
}

func (x *CreateChannelRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *CreateChannelRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CreateChannelRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChannelResponse) Reset() {
	*x = CreateChannelResponse{}
	mi := &file_channel_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelResponse) ProtoMessage() {}

func (x *CreateChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelResponse.ProtoReflect.Descriptor instead.
func (*CreateChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateChannelResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type GetChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelRequest) Reset() {
	*x = GetChannelRequest{}
	mi := &file_channel_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelRequest) ProtoMessage() {}

func (x *GetChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelRequest.ProtoReflect.Descriptor instead.
func (*GetChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelResponse) Reset() {
	*x = GetChannelResponse{}
	mi := &file_channel_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelResponse) ProtoMessage() {}

func (x *GetChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelResponse.ProtoReflect.Descriptor instead.
func (*GetChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetChannelResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ListChannelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ParentId      string                 `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // For listing channels in a category
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChannelsRequest) Reset() {
	*x = ListChannelsRequest{}
	mi := &file_channel_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelsRequest) ProtoMessage() {}

func (x *ListChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelsRequest.ProtoReflect.Descriptor instead.
func (*ListChannelsRequest) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListChannelsRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ListChannelsRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ListChannelsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListChannelsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListChannelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []*Channel             `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChannelsResponse) Reset() {
	*x = ListChannelsResponse{}
	mi := &file_channel_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelsResponse) ProtoMessage() {}

func (x *ListChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelsResponse.ProtoReflect.Descriptor instead.
func (*ListChannelsResponse) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListChannelsResponse) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *ListChannelsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpdateChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UpdateMask    []string               `protobuf:"bytes,4,rep,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"` // Fields to update
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChannelRequest) Reset() {
	*x = UpdateChannelRequest{}
	mi := &file_channel_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChannelRequest) ProtoMessage() {}

func (x *UpdateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChannelRequest.ProtoReflect.Descriptor instead.
func (*UpdateChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UpdateChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateChannelRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateChannelRequest) GetUpdateMask() []string {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChannelResponse) Reset() {
	*x = UpdateChannelResponse{}
	mi := &file_channel_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChannelResponse) ProtoMessage() {}

func (x *UpdateChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChannelResponse.ProtoReflect.Descriptor instead.
func (*UpdateChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateChannelResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type DeleteChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChannelRequest) Reset() {
	*x = DeleteChannelRequest{}
	mi := &file_channel_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelRequest) ProtoMessage() {}

func (x *DeleteChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelRequest.ProtoReflect.Descriptor instead.
func (*DeleteChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type DeleteChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChannelResponse) Reset() {
	*x = DeleteChannelResponse{}
	mi := &file_channel_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelResponse) ProtoMessage() {}

func (x *DeleteChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelResponse.ProtoReflect.Descriptor instead.
func (*DeleteChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteChannelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_channel_service_proto protoreflect.FileDescriptor

const file_channel_service_proto_rawDesc = "" +
	"\n" +
	"\x15channel_service.proto\x12\x04fuwa\x1a\vtypes.proto\"\x8e\x02\n" +
	"\x14CreateChannelRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x04type\x18\x02 \x01(\x0e2\x11.fuwa.ChannelTypeR\x04type\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\tR\bserverId\x12\x1b\n" +
	"\tparent_id\x18\x04 \x01(\tR\bparentId\x12D\n" +
	"\bmetadata\x18\x05 \x03(\v2(.fuwa.CreateChannelRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\x15CreateChannelResponse\x12'\n" +
	"\achannel\x18\x01 \x01(\v2\r.fuwa.ChannelR\achannel\"2\n" +
	"\x11GetChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"=\n" +
	"\x12GetChannelResponse\x12'\n" +
	"\achannel\x18\x01 \x01(\v2\r.fuwa.ChannelR\achannel\"\x84\x01\n" +
	"\x13ListChannelsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1b\n" +
	"\tparent_id\x18\x02 \x01(\tR\bparentId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"i\n" +
	"\x14ListChannelsResponse\x12)\n" +
	"\bchannels\x18\x01 \x03(\v2\r.fuwa.ChannelR\bchannels\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xed\x01\n" +
	"\x14UpdateChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12D\n" +
	"\bmetadata\x18\x03 \x03(\v2(.fuwa.UpdateChannelRequest.MetadataEntryR\bmetadata\x12\x1f\n" +
	"\vupdate_mask\x18\x04 \x03(\tR\n" +
	"updateMask\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\x15UpdateChannelResponse\x12'\n" +
	"\achannel\x18\x01 \x01(\v2\r.fuwa.ChannelR\achannel\"5\n" +
	"\x14DeleteChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"1\n" +
	"\x15DeleteChannelResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xf6\x02\n" +
	"\x0eChannelService\x12H\n" +
	"\rCreateChannel\x12\x1a.fuwa.CreateChannelRequest\x1a\x1b.fuwa.CreateChannelResponse\x12?\n" +
	"\n" +
	"GetChannel\x12\x17.fuwa.GetChannelRequest\x1a\x18.fuwa.GetChannelResponse\x12E\n" +
	"\fListChannels\x12\x19.fuwa.ListChannelsRequest\x1a\x1a.fuwa.ListChannelsResponse\x12H\n" +
	"\rUpdateChannel\x12\x1a.fuwa.UpdateChannelRequest\x1a\x1b.fuwa.UpdateChannelResponse\x12H\n" +
	"\rDeleteChannel\x12\x1a.fuwa.DeleteChannelRequest\x1a\x1b.fuwa.DeleteChannelResponseB\"Z github.com/waifu-devs/fuwa/protob\x06proto3"

var (
	file_channel_service_proto_rawDescOnce sync.Once
	file_channel_service_proto_rawDescData []byte
)

func file_channel_service_proto_rawDescGZIP() []byte {
	file_channel_service_proto_rawDescOnce.Do(func() {
		file_channel_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_channel_service_proto_rawDesc), len(file_channel_service_proto_rawDesc)))
	})
	return file_channel_service_proto_rawDescData
}

var file_channel_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_channel_service_proto_goTypes = []any{
	(*CreateChannelRequest)(nil),  // 0: fuwa.CreateChannelRequest
	(*CreateChannelResponse)(nil), // 1: fuwa.CreateChannelResponse
	(*GetChannelRequest)(nil),     // 2: fuwa.GetChannelRequest
	(*GetChannelResponse)(nil),    // 3: fuwa.GetChannelResponse
	(*ListChannelsRequest)(nil),   // 4: fuwa.ListChannelsRequest
	(*ListChannelsResponse)(nil),  // 5: fuwa.ListChannelsResponse
	(*UpdateChannelRequest)(nil),  // 6: fuwa.UpdateChannelRequest
	(*UpdateChannelResponse)(nil), // 7: fuwa.UpdateChannelResponse
	(*DeleteChannelRequest)(nil),  // 8: fuwa.DeleteChannelRequest
	(*DeleteChannelResponse)(nil), // 9: fuwa.DeleteChannelResponse
	nil,                           // 10: fuwa.CreateChannelRequest.MetadataEntry
	nil,                           // 11: fuwa.UpdateChannelRequest.MetadataEntry
	(ChannelType)(0),              // 12: fuwa.ChannelType
	(*Channel)(nil),               // 13: fuwa.Channel
}
var file_channel_service_proto_depIdxs = []int32{
	12, // 0: fuwa.CreateChannelRequest.type:type_name -> fuwa.ChannelType
	10, // 1: fuwa.CreateChannelRequest.metadata:type_name -> fuwa.CreateChannelRequest.MetadataEntry
	13, // 2: fuwa.CreateChannelResponse.channel:type_name -> fuwa.Channel
	13, // 3: fuwa.GetChannelResponse.channel:type_name -> fuwa.Channel
	13, // 4: fuwa.ListChannelsResponse.channels:type_name -> fuwa.Channel
	11, // 5: fuwa.UpdateChannelRequest.metadata:type_name -> fuwa.UpdateChannelRequest.MetadataEntry
	13, // 6: fuwa.UpdateChannelResponse.channel:type_name -> fuwa.Channel
	0,  // 7: fuwa.ChannelService.CreateChannel:input_type -> fuwa.CreateChannelRequest
	2,  // 8: fuwa.ChannelService.GetChannel:input_type -> fuwa.GetChannelRequest
	4,  // 9: fuwa.ChannelService.ListChannels:input_type -> fuwa.ListChannelsRequest
	6,  // 10: fuwa.ChannelService.UpdateChannel:input_type -> fuwa.UpdateChannelRequest
	8,  // 11: fuwa.ChannelService.DeleteChannel:input_type -> fuwa.DeleteChannelRequest
	1,  // 12: fuwa.ChannelService.CreateChannel:output_type -> fuwa.CreateChannelResponse
	3,  // 13: fuwa.ChannelService.GetChannel:output_type -> fuwa.GetChannelResponse
	5,  // 14: fuwa.ChannelService.ListChannels:output_type -> fuwa.ListChannelsResponse
	7,  // 15: fuwa.ChannelService.UpdateChannel:output_type -> fuwa.UpdateChannelResponse
	9,  // 16: fuwa.ChannelService.DeleteChannel:output_type -> fuwa.DeleteChannelResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_channel_service_proto_init() }
func file_channel_service_proto_init() {
	if File_channel_service_proto != nil {
		return
	}
	file_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_channel_service_proto_rawDesc), len(file_channel_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_channel_service_proto_goTypes,
		DependencyIndexes: file_channel_service_proto_depIdxs,
		MessageInfos:      file_channel_service_proto_msgTypes,
	}.Build()
	File_channel_service_proto = out.File
	file_channel_service_proto_goTypes = nil
	file_channel_service_proto_depIdxs = nil
}
